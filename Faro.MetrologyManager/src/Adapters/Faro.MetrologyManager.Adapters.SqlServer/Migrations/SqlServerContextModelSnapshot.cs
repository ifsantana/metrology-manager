// <auto-generated />
using System;
using Faro.MetrologyManager.Adapters.SqlServer.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Faro.MetrologyManager.Adapters.SqlServer.Migrations
{
    [DbContext(typeof(SqlServerContext))]
    partial class SqlServerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Faro.MetrologyManager.Adapters.EFCore.DataModels.ActualPointDataModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR(150)")
                        .HasColumnName("CREATED_BY");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("NAME");

                    b.Property<Guid>("NominalPointId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("NOMINAL_POINT_ID");

                    b.Property<long>("RowVersion")
                        .HasColumnType("BIGINT")
                        .HasColumnName("ROW_VERSION");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATED_AT");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR(150)")
                        .HasColumnName("UPDATED_BY");

                    b.Property<decimal>("X")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)")
                        .HasColumnName("X");

                    b.Property<decimal>("Y")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)")
                        .HasColumnName("Y");

                    b.Property<decimal>("Z")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)")
                        .HasColumnName("Z");

                    b.HasKey("Id");

                    b.HasIndex("NominalPointId")
                        .HasDatabaseName("IX_ACTUAL_POINT_NOMINAL_POINT");

                    b.ToTable("ACTUAL_POINT", "MetrologyManager");
                });

            modelBuilder.Entity("Faro.MetrologyManager.Adapters.EFCore.DataModels.NominalPointDataModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR(150)")
                        .HasColumnName("CREATED_BY");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("NAME");

                    b.Property<long>("RowVersion")
                        .HasColumnType("BIGINT")
                        .HasColumnName("ROW_VERSION");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATED_AT");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR(150)")
                        .HasColumnName("UPDATED_BY");

                    b.Property<decimal>("X")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)")
                        .HasColumnName("X");

                    b.Property<decimal>("Y")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)")
                        .HasColumnName("Y");

                    b.Property<decimal>("Z")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)")
                        .HasColumnName("Z");

                    b.HasKey("Id");

                    b.ToTable("NOMINAL_POINT", "MetrologyManager");
                });

            modelBuilder.Entity("Faro.MetrologyManager.Adapters.EFCore.DataModels.ActualPointDataModel", b =>
                {
                    b.HasOne("Faro.MetrologyManager.Adapters.EFCore.DataModels.NominalPointDataModel", "NominalPoint")
                        .WithMany("ActualPointsCollection")
                        .HasForeignKey("NominalPointId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("NominalPoint");
                });

            modelBuilder.Entity("Faro.MetrologyManager.Adapters.EFCore.DataModels.NominalPointDataModel", b =>
                {
                    b.Navigation("ActualPointsCollection");
                });
#pragma warning restore 612, 618
        }
    }
}
